import "Governance.proto";

package i2OWater.Anapos.Governance.EnterpriseEvents.AccessControl;

// enterprise events

message UserAcceptedTermsAndConditions {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1;
  required User user = 2;
  required int32 version = 3; 
  extensions 100 to 120; 
}

message UserAccountRegistered {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1;
  required User user = 2; 
  extensions 100 to 120; 
}

message UserAccountDeactivated {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1;
  required User user = 2;
  optional Session session = 3;
  extensions 100 to 120;
}

message UserAccountActivated {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1;
  required User user = 2; 
  extensions 100 to 120; 
}

message UserAccountLocked {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1; 
  required User user = 2; 
  optional Session session = 3; 
  extensions 100 to 120; 
}

message UserAccountUnlocked {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1; 
  required User user = 2; 
  extensions 100 to 120; 
}

message UserFailedToLogIn {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1;
  required string tenant_short_name = 2;
  required User user = 3; 
  required UserStats user_stats = 4; 
  required string reason = 5; 
  extensions 100 to 120; 
}

message UserLoggedIn {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1;
  required User user = 2; 
  required Session session = 3; 
  required UserStats user_stats = 4; 
  extensions 100 to 120; 
}

message UserLoggedOut {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1; 
  required User user = 2; 
  required Session session = 3; 
  extensions 100 to 120; 
}

message UserEmailAddressChanged {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1; 
  required User user = 2;
  required string old_email_address = 3;
  extensions 100 to 120;
}

message UserPasswordResetRequested {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1;
  required User user = 2;
  required UserStats user_stats = 3;
  extensions 100 to 120;
}

message UserPasswordChanged {
  required i2OWater.Anapos.Governance.EnterpriseEvent root_event = 1;
  required User user = 2;
  required UserStats user_stats = 3;
  extensions 100 to 120;
}

// sub messages

message User {
  required string username = 1; 
  required string tenant_code = 2; 
  required string first_name = 3; 
  required string last_name = 4; 
  required string email = 5; 
  optional string office_phone = 6; 
  optional string mobile_phone = 7; 
  required string role = 8; 
  extensions 100 to 120; 
}; 

message Session {
  required string token = 1; 
  required sfixed64 started = 2; 
  required sfixed64 ends_at = 3; 
  optional sfixed64 ended = 4; 
  optional string existing_token = 5; 
  required string anti_csrf_token = 6; 
  extensions 100 to 120; 
}; 

message UserStats {
  required string ip_address = 1; 
  optional string location = 2; 
  optional string browser = 3; 
  optional string browser_resolution = 4; 
  optional string os_type = 5; 
  extensions 100 to 120; 
}; 
